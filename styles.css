      /* Global Styles & Colors */
      :root {
        --green: #6aaa64;
        --darkendGreen: #538d4e;
        --yellow: #c9b458;
        --darkendYellow: #b59f3b;
        --lightGray: #d8d8d8;
        --gray: #86888a;
        --darkGray: #939598;
        --white: #fff;
        --black: #212121;
        /* Colorblind colors */
        --orange: #f5793a;
        --blue: #85c0f9;
        font-family: 'Clear Sans', 'Helvetica Neue', Arial, sans-serif;
        font-size: 16px;
        --header-height: 50px;
        --keyboard-height: 200px;
        --game-max-width: 500px;
      }
      /* Light theme colors */
      :root {
        --color-tone-1: #1a1a1b;
        --color-tone-2: #787c7e;
        --color-tone-3: #878a8c;
        --color-tone-4: #d3d6da;
        --color-tone-5: #edeff1;
        --color-tone-6: #f6f7f8;
        --color-tone-7: #ffffff;
        --opacity-50: rgba(255, 255, 255, 0.5);
      }
      /* Dark Theme Colors */
      .nightmode {
        --color-tone-1: #d7dadc;
        --color-tone-2: #818384;
        --color-tone-3: #565758;
        --color-tone-4: #3a3a3c;
        --color-tone-5: #272729;
        --color-tone-6: #1a1a1b;
        --color-tone-7: #121213;
        --opacity-50: rgba(0, 0, 0, 0.5);
      }
      /* Constant colors and colors derived from theme */
      :root,
      .nightmode {
        --color-background: var(--color-tone-7);
      }
      :root {
        --color-present: var(--yellow);
        --color-correct: var(--green);
        --color-absent: var(--color-tone-2);
        --tile-text-color: var(--color-tone-7);
        --key-text-color: var(--color-tone-1);
        --key-evaluated-text-color: var(--color-tone-7);
        --key-bg: var(--color-tone-4);
        --key-bg-present: var(--color-present);
        --key-bg-correct: var(--color-correct);
        --key-bg-absent: var(--color-absent);
        --modal-content-bg: var(--color-tone-7);
      }
      .nightmode {
        --color-present: var(--darkendYellow);
        --color-correct: var(--darkendGreen);
        --color-absent: var(--color-tone-4);
        --tile-text-color: var(--color-tone-1);
        --key-text-color: var(--color-tone-1);
        --key-evaluated-text-color: var(--color-tone-1);
        --key-bg: var(--color-tone-2);
        --key-bg-present: var(--color-present);
        --key-bg-correct: var(--color-correct);
        --key-bg-absent: var(--color-absent);
        --modal-content-bg: var(--color-tone-7);
      }
      .colorblind {
        --color-correct: var(--orange);
        --color-present: var(--blue);
        --tile-text-color: var(--white);
        --key-bg-present: var(--color-present);
        --key-bg-correct: var(--color-correct);
        --key-bg-absent: var(--color-absent);
      }
      html {
        height: 100%;
      }
      body {
        height: 100%;
        background-color: var(--color-background);
        margin: 0;
        padding: 0;
        /* Prevent scrollbar appearing on page transition */
        overflow-y: hidden;
      }

.key {
  font-size: inherit;
  grid-column: span 2;
  border: none;
  padding: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: var(--key-bg);
  color: var(--key-text-color);
  text-transform: uppercase;
  border-radius: .25em;
  cursor: pointer;
  user-select: none;
}

.key.large {
  grid-column: span 3;
}

.key > svg {
  width: 1.75em;
  height: 1.75em;
}

.key:hover, .key:focus {
  --lightness-offset: 10%;
}

.key.absent {
  background-color: var(--key-bg-absent);
  color: var(--key-evaluated-text-color);
}

.key.present {
  background-color: var(--key-bg-present);
  color: var(--key-evaluated-text-color);
}

.key.correct {
  background-color: var(--key-bg-correct);
  color: var(--key-evaluated-text-color);
}

.guess-grid {
  display: grid;
  justify-content: center;
  align-content: center;
  flex-grow: 1;
  grid-template-columns: repeat(5, 4em);
  grid-template-rows: repeat(6, 4em);
  gap: .25em;
  margin-bottom: 1em;
}


  :host {
    display: inline-block;
  }
  .tile {
    width: 100%;
    display: inline-flex;
    justify-content: center;
    align-items: center;
    font-size: 2rem;
    line-height: 2rem;
    font-weight: bold;
    vertical-align: middle;
    box-sizing: border-box;
    color: var(--tile-text-color);
    text-transform: uppercase;
    user-select: none;
  }
  .tile::before {
    content: '';
    display: inline-block;
    padding-bottom: 100%;
  }

  /* Allow tiles to be smaller on small screens */
  @media (max-height: 600px) {
    .tile {
      font-size: 1em;
      line-height: 1em;
    }
  }

  .tile[data-state='empty'] {
    border: 2px solid var(--color-tone-4);
  }
  .tile[data-state='active'] {
    background-color: var(--color-tone-7);
    border: 2px solid var(--color-tone-3);
    color: var(--color-tone-1);
  }
  .tile[data-state='correct'] {
    background-color: var(--color-correct);
  }
  .tile[data-state='present'] {
    background-color: var(--color-present);
  }
  .tile[data-state='absent'] {
    background-color: var(--color-absent);
  }

  .tile[data-animation='pop'] {
    animation-name: PopIn;
    animation-duration: 100ms;
  }

  @keyframes PopIn {
    from {
      transform: scale(0.8);
      opacity: 0;
    }

    40% {
      transform: scale(1.1);
      opacity: 1;
    }
  }
  .tile[data-animation='flip-in'] {
    animation-name: FlipIn;
    animation-duration: 250ms;
    animation-timing-function: ease-in;
  }
  @keyframes FlipIn {
    0% {
      transform: rotateX(0);
    }
    100% {
      transform: rotateX(-90deg);
    }
  }
  .tile[data-animation='flip-out'] {
    animation-name: FlipOut;
    animation-duration: 250ms;
    animation-timing-function: ease-in;
  }
  @keyframes FlipOut {
    0% {
      transform: rotateX(-90deg);
    }
    100% {
      transform: rotateX(0);
    }
  }

.tile {
  font-size: 2em;
  color: var(--tile-text-color);
  text-transform: uppercase;
  font-weight: bold;
  display: flex;
  justify-content: center;
  align-items: center;
  vertical-align: middle;
  user-select: none;
  transition: transform 250ms linear;
}

.tile[data-state="wrong"] {
  border: none;
  background-color: hsl(240, 2%, 23%);
}

.tile[data-state="wrong-location"] {
  border: none;
  background-color: hsl(49, 51%, 47%);
}

.tile[data-state="correct"] {
  border: none;
  background-color: hsl(115, 29%, 43%);
}

.tile.shake-horizontal {
  animation: shake-horizontal 800ms cubic-bezier(.455,.03,.515,.955) both;
}

.tile.dance {
  animation: dance 500ms ease-in-out;
}

.tile.flip {
  transform: rotateX(90deg);
}

@keyframes shake-horizontal {
  0%, 100% {
    transform: translateX(0);
  }
  10%, 30%, 50%, 70% {
    transform: translateX(-10px);
  }
  20%, 40%, 60% {
    transform: translateX(10px);
  }
  80% {
    transform: translateX(8px);
  }
  90% {
    transform: translateX(-8px);
  }
}

@keyframes dance {
  0%, 20%, 100% {
    transform: translateY(0);
  }  
  40% {
    transform: translateY(-30px);
  }  
  50% {
    transform: translateY(5px);
  }  
  60% {
    transform: translateY(-15px);
  }
  80% {
    transform: translateY(2px);
  }
}

.alert-container {
  position: fixed;
  top: 10vh;
  left: 50vw;
  transform: translateX(-50%);
  z-index: 1;
  display: flex;
  flex-direction: column;
  align-items: center;
}

.alert {
  pointer-events: none;
  background-color: hsl(204, 7%, 85%);
  padding: .75em;
  border-radius: .25em;
  opacity: 1;
  transition: opacity 500ms ease-in-out;
  margin-bottom: .5em;
}

.alert:last-child {
  margin-bottom: 0;
}

.alert.hide {
  opacity: 0;
}

#game {
  width: 100%;
  max-width: var(--game-max-width);
  margin: 0 auto;
  height: 100%;
  display: flex;
  flex-direction: column;
}

header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  height: var(--header-height);
  color: var(--color-tone-1);
  border-bottom: 1px solid var(--color-tone-4);
}

header .title {
  font-weight: 700;
  font-size: 36px;
  letter-spacing: 0.2rem;
  text-transform: uppercase;
  text-align: center;
  position: absolute;
  left: 0;
  right: 0;
  pointer-events: none;
}

@media (max-width: 360px) {
  header .title {
    font-size: 22px;
    letter-spacing: 0.1rem;
  }
}

#keyboard {
  margin: 0 8px;
  user-select: none;
  height: var(--keyboard-height);
}

.row {
  display: flex;
  width: 100%;
  margin: 0 auto 8px;
  /* https://stackoverflow.com/questions/46167604/ios-html-disable-double-tap-to-zoom */
  touch-action: manipulation;
}

#keyboard button {
  font-family: inherit;
  font-weight: bold;
  border: 0;
  padding: 0;
  margin: 0 6px 0 0;
  height: 58px;
  border-radius: 4px;
  cursor: pointer;
  user-select: none;
  background-color: var(--key-bg);
  color: var(--key-text-color);
  flex: 1;
  display: flex;
  justify-content: center;
  align-items: center;
  text-transform: uppercase;
  -webkit-tap-highlight-color: rgba(0,0,0,0.3);
}
button:focus {
  outline: none;
}

button.fade {
  transition: background-color 0.1s ease, color 0.1s ease;
}

button:last-of-type {
  margin: 0;
}

button.icon {
  background: none;
  border: none;
  cursor: pointer;
  padding: 0 4px;
  width: 24px;
  height: 27.5px;
}
